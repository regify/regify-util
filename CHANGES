Non backward compatible API changes between 1.3 and 2.0
* The use of RU_SIZE_AUTO for NULL terminated strings instead of a 0 length rusize parameter in the following functions:
- ruStringAppendn

* The size parameter of ruStringNewn now trims the given string if size is less than the strings length.

* List iterator interface changed from
- for (char *vd = ruIterCurrent(li, char*); li; vd = ruIterNext(li, char*))
+ for (char *vd = ruIterNext(li, char*); li; vd = ruIterNext(li, char*))
* Other ruList API changes
- ruListNew(ruFreeFunc) -> ruListNew(ruType)
- ruListSize return switched from int -> uint
- ruListRemoveAfter has been removed in favor of ruListRemove
- ruListElmtIsHead no longer needs ruList
- ruListIdxData - ruListIdx
- ruListIdxElmtData - ruListIdxData

* The switch to rusize and the use of RU_SIZE_AUTO for NULL terminated strings instead of negative rusize_s parameters in the following functions:
- kvset
- ruFileStoreSet
- ruNullStoreSet
- ruFileSetContents

* Renamed the following functions to make the names more consistent:
- ruLastSubstr - ruLastSubStr
- ruLastSubstrLen - ruLastSubStrLen
- ruStrsplit - ruStrSplit
- ruStrdup - ruStrDup
- ruStrndup - ruStrNDup
- ruStrcasecmp - ruStrCaseCmp
- ruStrcmp - ruStrCmp
- ruStrEndsCaseWith - ruStrCaseEndsWith
- ruStrToll - ruStrParseLong (different API)
- ruMapKeySet - ruMapKeyList (also changed parameter order to be more natural)

* Removed the following
- ruMapNew(*hash, *match,...) -> ruMapNew(ruType keyType, ruType valType)
- removed ruMapNewString

* ruListSize result is int32_t -> uint32_t and return on error is -1 -> 0

* Reworked string trim API to be more sane. Trim means removing off the ends. Strip means removing everywhere.
Optional malloc API means creating a copy when needed and returning references to both final string and copy.
The inplace functions have been removed. The following updates are suggested:
- ruStrTrim: ruStrTrim(instr) -> ruStrTrim(instr, NULL, ruTrimEnd, &newstr)
- ruStrTrimDup: ruStrTrimDup(instr, &newstr) -> ruStrTrim(instr, NULL, ruTrimBoth, &newstr)
- ruStrStrip - ruStrStrip(instr, asciichars) -> ruStrTrim(instr, asciichars, ruTrimEnd, &newstr)
- ruStripChars - ruStripChars(instr, chars) -> ruStrStrip(instr, chars, &newstr)

* File system paths are accepted and assumed to be Unix style on all platforms
- ruPathJoin now joins using unix slashes
- ruPathJoinNative has been added to use Windows slashes on Windows

* Logging API has been reworked to integrate realtime log cleaning and an optional logging thread
- ruSetLogger has new cleaned and threaded params. Just add ,false, false for compatibility
- ruLogFunc now also receives the log level ruStdErrorLogger(perm_ptr, trans_chars) -> ruStdErrorLogger(perm_ptr, uint32_t, trans_chars)
